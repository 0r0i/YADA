@startuml
skinparam defaultTextAlignment center
skinparam activity {
  StartColor #634929
  EndColor #634929
  BackgroundColor #FED300
  BorderColor #923222
  ArrowColor #923222
}
start
:HTTP request\nfor yada.jsp;
:init Service;
:init YADARequest;
if(is multipart content?) then (yes)
 :handle upload;
 note left: details forthcoming
else (no)
 :populate parameter values\nin YADARequest;
 :init QueryManager;
 :instantiate YADAQuery objects\nvia Finder;
 :deconstruct request params to\nquery-level and\nglobal parameters;
 :determine adaptor class;
 note right: includes protocol, e.g., JDBC, REST, etc
 :conform query code\nper adaptor/protocol;
 :deconstruct query for\nparameter injection;
 :set positional parameters;
 :set Global Harmony Map;
 :set Query-level Harmony Maps;
 :store conformed query;
 :inject positional parameter vals;
 :Service._execute;
 :engageBypass\n(YADARequest);
 if(Result is null?) then (yes)
   :engagePreprocess\n(YADARequest);
   repeat
     :engageBypass
      (YADAQuery);
     if(Result is null?) then (yes)
       :engagePreprocess\n(YADAQuery);
       :execute\nquery with adaptor;
       if(commitQuery?) then (yes)
       :commit;
       else (no)
       endif
       :engagePostprocess\n(YADAQuery);
     else (no)
     endif
   repeat while(more YADAQuery objects?) is (yes) not (no)
 :commit\non all connections; 
 :compose Response;
 repeat
   if(harmonize?) then (yes)
     :Harmonizer.harmonize;
     if(flatten?) then (yes)
       :Harmonizer.flatten;
     else (no)
     endif
   else (no)
   endif
 repeat while(more YADAQueryResult objects) is (yes) not (no)
 if(join?) then (yes)
   :Joiner.join (all results);
   note left: INNER or LEFT OUTER
 else(no)
 endif
 :engage Postprocess\n(String);
 if(export?) then (yes)
   :export result;
   note left: details forthcoming
 else (no)
 endif
 else (no)
 endif
endif
end
@enduml